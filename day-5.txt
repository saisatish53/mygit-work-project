import random as r 
x="i love you"
print(r.sample(x,2))


output:
['i', ' ']
['y', 'l']


import random as r
a=[1,2,3,4,5,6]
r.shuffle(a)
print(a)

output:

[1, 2, 4, 5, 3, 6]


import random as r
a=[1,2,3,4,5,6]
print(r.choice(a))
b="welcome back"
print(r.choice(b))
a=-r.random()
print(a)

output:

6
c
-0.39707405938553264


import random as r
print(r.randint(20,22))
a=[10,20,30,40,50]
print(r.choices(a,k=10))

output:
20
[40, 40, 40, 20, 40, 40, 30, 10, 10, 20]


import random as r
s="hello good day"
print(r.choices(s,k=3))
print(r.uniform(5,10))

output:
['y', 'o', 'o']
8.091560928226368


import random as r
z=dir(r)
print(z)

output:
['BPF', 'LOG4', 'NV_MAGICCONST', 'RECIP_BPF', 'Random', 'SG_MAGICCONST', 'S
ystemRandom', 'TWOPI', '_ONE', '_Sequence', '_Set', '__all__', '__builtins_
_', '__cached__', '__doc__', '__file__', '__loader__', '__name__', '__packa
ge__', '__spec__', '_accumulate', '_acos', '_bisect', '_ceil', '_cos', '_e'
, '_exp', '_floor', '_index', '_inst', '_isfinite', '_log', '_os', '_pi', '
_random', '_repeat', '_sha512', '_sin', '_sqrt', '_test', '_test_generator'
, '_urandom', '_warn', 'betavariate', 'choice', 'choices', 'expovariate', '
gammavariate', 'gauss', 'getrandbits', 'getstate', 'lognormvariate', 'norma
lvariate', 'paretovariate', 'randbytes', 'randint', 'random', 'randrange',
'sample', 'seed', 'setstate', 'shuffle', 'triangular', 'uniform', 'vonmises
variate', 'weibullvariate']


import calendar
print("full calendar")
print(calendar.calendar(2022))
print("particular month")
print(calendar.month(2021,3))

print("set first day of the week")
calendar.setfirstweekday(calendar.SUNDAY)
print(calendar.month(2021,1))


output:
full calendar
                                  2022

      January                   February                   March
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2          1  2  3  4  5  6          1  2  3  4  5  6
 3  4  5  6  7  8  9       7  8  9 10 11 12 13       7  8  9 10 11 12 13
10 11 12 13 14 15 16      14 15 16 17 18 19 20      14 15 16 17 18 19 20
17 18 19 20 21 22 23      21 22 23 24 25 26 27      21 22 23 24 25 26 27
24 25 26 27 28 29 30      28                        28 29 30 31
31

       April                      May                       June
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
             1  2  3                         1             1  2  3  4  5
 4  5  6  7  8  9 10       2  3  4  5  6  7  8       6  7  8  9 10 11 12
11 12 13 14 15 16 17       9 10 11 12 13 14 15      13 14 15 16 17 18 19
18 19 20 21 22 23 24      16 17 18 19 20 21 22      20 21 22 23 24 25 26
25 26 27 28 29 30         23 24 25 26 27 28 29      27 28 29 30
                          30 31

        July                     August                  September
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
             1  2  3       1  2  3  4  5  6  7                1  2  3  4
 4  5  6  7  8  9 10       8  9 10 11 12 13 14       5  6  7  8  9 10 11
11 12 13 14 15 16 17      15 16 17 18 19 20 21      12 13 14 15 16 17 18
18 19 20 21 22 23 24      22 23 24 25 26 27 28      19 20 21 22 23 24 25
25 26 27 28 29 30 31      29 30 31                  26 27 28 29 30

      October                   November                  December
Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su      Mo Tu We Th Fr Sa Su
                1  2          1  2  3  4  5  6                1  2  3  4
 3  4  5  6  7  8  9       7  8  9 10 11 12 13       5  6  7  8  9 10 11
10 11 12 13 14 15 16      14 15 16 17 18 19 20      12 13 14 15 16 17 18
17 18 19 20 21 22 23      21 22 23 24 25 26 27      19 20 21 22 23 24 25
24 25 26 27 28 29 30      28 29 30                  26 27 28 29 30 31
31

particular month
     March 2021
Mo Tu We Th Fr Sa Su
 1  2  3  4  5  6  7
 8  9 10 11 12 13 14
15 16 17 18 19 20 21
22 23 24 25 26 27 28
29 30 31

set first day of the week
    January 2021
Su Mo Tu We Th Fr Sa
                1  2
 3  4  5  6  7  8  9
10 11 12 13 14 15 16
17 18 19 20 21 22 23
24 25 26 27 28 29 30
31





import datetime
a=datetime.datetime.now()
print(a)
sv=a.strftime("%Y")
fv=a.strftime("%y")
print("year short version",sv)
print("year full version",fv)


output:
2023-02-03 10:12:58.262435
year short version 2023
year full version 23


functions:
classifications:
pre and user definds 
for the code reseadility we use funcions 
lets say we want to use a particular cocept multiple time in our
progam instead of writing te sme come multiple times 
we can write it once including that inside a funtion and can call the function where ever we need it
types:
1.funtion without argument without return value
2. ........................with  .............
3funtion with argument without return value
4.......................with................

keyword is "def"


def sample():
    print("great day")
    print("happy days")
sample()
print("today")


output:
great day
happy days
today


def multiply():
    n1=int(input("number"))
    n2=int(input("number"))
    n3=int(input("number"))
    prod=n1*n2*n3
    print(prod)
multiply()


output:
number1
number2
number3
6

def multiply():
    n1=int(input("number"))
    n2=int(input("number"))
    n3=int(input("number"))
    prod=n1*n2*n3
    return prod
res=multiply()
print(res)


output:
number2
number3
number4
24


def multiply(a,b,c):
    prod=a*b*c
    print(prod)
n1=int(input("enter the fitsr value: "))
n2=int(input("enter the second value: "))
n3=int(input("enter the third value: "))
multiply(n1,n2,n3)

output:
enter the fitsr value: 4
enter the second value: 5
enter the third value: 3
60


def multiply(a,b,c):
    prod=a*b*c
    return prod
n1=int(input("enter the fitsr value: "))
n2=int(input("enter the second value: "))
n3=int(input("enter the third value: "))
res1=multiply(n1,n2,n3)
print(res1)


output:
enter the fitsr value: 3
enter the second value: 4
enter the third value: 6
72

q1:taking lemons:
def lemons():
    inhand=int(input("No of lemons :")) 
    if inhand>21:
        print("You have ",inhand-21," excess lemons")
    elif inhand<21:
        print("You have to buy ",21-inhand," lemons")
    else:
        print("You have enough lemons") 
lemons()

output:
No of lemons :5
You have to buy  16  lemons

q2:type factors of given no:
def type():
    a=int(input("enter the value: "))
    for i in range(1,a+1):
        if(a%i==0):
            print(i)
type()




output:enter the value: 3
1
3



q3:table of any number:
n=5
for i in range(1,12):
    print(i,"x",n,"=",i*n)

output:1 x 5 = 5
2 x 5 = 10
3 x 5 = 15
4 x 5 = 20
5 x 5 = 25
6 x 5 = 30
7 x 5 = 35
8 x 5 = 40
9 x 5 = 45
10 x 5 = 50
11 x 5 = 55

q4:sum of digits of given no:

def digits_sum(num):
      l=[]
      for i in str(num):
            l.append(int(i))
      print(sum(l))
num=int(input("enter a number: "))
digits_sum(num)


output:
enter a number: 456
15


#recursive function which calls itself is call recursive 

this concept is called recursion


def display():
    n=int(input("enter the number: "))
    if n==1:
        display()
    else:
        print("over")
display()


output:
enter the number: 1
enter the number: 1
enter the number: 1
enter the number: 1
enter the number: 1
enter the number: 1
enter the number: 1
enter the number: 1
enter the number: 3
over

def fact(n):
    if n==0:
        return 1
    return n* fact(n-1)
a=int(input("enter the number: "))
result=fact(a)
print(result)
#logic
4!
4*fact(3)
4*3*fact(2)
4*3*2*fact(1)
4*3*2*1*fact(0)
hence output is 24

output:
enter the number: 5
120




n=int(input("enter the number: "))
a=0
b=1
sum=0
count=1
while(count<=n):
    print(sum,end=" ")
    count +=1
    a=b
    b=sum
    sum=a+b


output:
enter the number: 1
0






















